{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Java\u9762\u8bd5\u603b\u7ed3","text":""},{"location":"array/array/","title":"\u6570\u7ec4<code>Array</code>","text":""},{"location":"array/array/#_1","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"array/array/#_2","title":"\u7279\u6027","text":"<ul> <li><code>\u987a\u5e8f</code>\u5b58\u50a8\u591a\u4e2a<code>\u76f8\u540c\u7c7b\u578b</code>\u7684\u6570\u636e, \u5185\u5b58\u4e2d\u76f8\u8fde</li> <li>\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u4e3a<code>\u7d22\u5f15</code></li> <li>\u6709\u7d22\u5f15\uff0c\u6240\u4ee5\u8bbf\u95ee\u975e\u5e38\u9ad8\u6548</li> <li><code>\u56fa\u5b9a\u5bb9\u91cf</code>\uff0c\u4e00\u7ecf\u521b\u5efa\uff0c\u957f\u5ea6\u4e0d\u53ef\u53d8\uff0c\u6269\u5bb9\u9700\u8981<code>\u521b\u5efa\u65b0\u6570\u7ec4</code>\uff0c\u5c06\u6570\u636e<code>\u62f7\u8d1d</code>\u8fc7\u53bb</li> <li>\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u6548\u7387\u4f4e\uff0c\u4e3a\u4e86\u4f7f\u6570\u7ec4\u7684\u5143\u7d20\u76f8\u8fde\uff0c\u53ef\u80fd\u9700\u8981\u79fb\u52a8\u5176\u5b83\u6570\u7ec4\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)</li> <li><code>\u5185\u5b58\u6d6a\u8d39</code>\uff0c\u521d\u59cb\u5316\u4e00\u4e2a\u6bd4\u8f83\u957f\u7684\u6570\u7ec4\uff0c\u53ea\u7528\u524d\u9762\u90e8\u5206</li> </ul>"},{"location":"array/array/#_3","title":"\u521d\u59cb\u5316","text":"<p>\u65e0\u521d\u59cb\u503c\uff0c\u4f46\u9700\u6307\u5b9a\u957f\u5ea6</p> <pre><code>int[] arr = new int[5]; // { 0, 0, 0, 0, 0 }\n</code></pre> <p>\u6709\u521d\u59cb\u503c</p> <pre><code>int[] nums = { 1, 3, 2, 5, 4 };\n</code></pre>"},{"location":"array/array/#_4","title":"\u5e38\u7528\u64cd\u4f5c","text":"<p>\u904d\u5386</p> <pre><code>int[] nums = { 1, 3, 2, 5, 4 };\n\nfor(int i=0;i&lt;nums.length;i++){\nSystem.out.println(nums[i]);\n}\n\nfor(int num:nums){\nSystem.out.println(num);\n}\n</code></pre> <p>\u67e5\u627e</p> <pre><code>int a = nums[0];\n</code></pre> <p>\u63d2\u5165</p> <pre><code>/* \u5728\u6570\u7ec4\u7684\u7d22\u5f15 index \u5904\u63d2\u5165\u5143\u7d20 num */\nvoid insert(int[] nums, int num, int index) {\n// \u628a\u7d22\u5f15 index \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\nfor (int i = nums.length - 1; i &gt; index; i--) {\nnums[i] = nums[i - 1];\n}\n// \u5c06 num \u8d4b\u7ed9 index \u5904\u5143\u7d20\nnums[index] = num;\n}\n</code></pre> <p>\u5220\u9664</p> <pre><code>/* \u5220\u9664\u7d22\u5f15 index \u5904\u5143\u7d20 */\nvoid remove(int[] nums, int index) {\n// \u628a\u7d22\u5f15 index \u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\nfor (int i = index; i &lt; nums.length - 1; i++) {\nnums[i] = nums[i + 1];\n}\n}\n</code></pre>"},{"location":"array/array/#_5","title":"\u5b9e\u9645\u5e94\u7528","text":"<p>\u968f\u673a\u8bbf\u95ee</p> <p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u968f\u673a\u62bd\u53d6\u4e00\u4e9b\u6837\u672c\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5e8f\u5217\uff0c\u6839\u636e\u7d22\u5f15\u5b9e\u73b0\u6837\u672c\u7684\u968f\u673a\u62bd\u53d6\u3002</p> <p>\u4e8c\u5206\u67e5\u627e</p> <p>\u4f8b\u5982\u67e5\u5b57\u5178\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u5178\u4e2d\u7684\u6240\u6709\u5b57\u6309\u7167\u62fc\u97f3\u987a\u5e8f\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u4e0e\u65e5\u5e38\u67e5\u7eb8\u8d28\u5b57\u5178\u76f8\u540c\u7684\u201c\u7ffb\u5f00\u4e2d\u95f4\uff0c\u6392\u9664\u4e00\u534a\u201d\u7684\u65b9\u5f0f\uff0c\u6765\u5b9e\u73b0\u4e00\u4e2a\u67e5\u7535\u5b50\u5b57\u5178\u7684\u7b97\u6cd5\u3002</p> <p>\u6df1\u5ea6\u5b66\u4e60</p> <p>\u795e\u7ecf\u7f51\u7edc\u4e2d\u5927\u91cf\u4f7f\u7528\u4e86\u5411\u91cf\u3001\u77e9\u9635\u3001\u5f20\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u4ee3\u6570\u8fd0\u7b97\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u662f\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u6784\u5efa\u7684\u3002\u6570\u7ec4\u662f\u795e\u7ecf\u7f51\u7edc\u7f16\u7a0b\u4e2d\u6700\u5e38\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002</p>"},{"location":"array/array/#leetcode","title":"<code>leetcode</code>","text":"<p>1. \u4e24\u6570\u4e4b\u548c</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums\u00a0\u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target\u00a0 \u7684\u90a3\u00a0\u4e24\u4e2a\u00a0\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u5728\u7b54\u6848\u91cc\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u3002</p> <p>\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [2,7,11,15], target = 9\n\u8f93\u51fa\uff1a[0,1]\n\u89e3\u91ca\uff1a\u56e0\u4e3a nums[0] + nums[1] == 9 \uff0c\u8fd4\u56de [0, 1] \u3002\n</code></pre> <pre><code>class Solution {\npublic int[] twoSum(int[] nums, int target) {\nfor(int i=0;i&lt;nums.length;i++){\nfor(int j=i+1;j&lt;nums.length;j++){\nif(nums[i]+nums[j]==target){\nint[] res = {i,j};\nreturn res;\n}\n}\n}\nreturn new int[0];\n}\n}\n</code></pre>"},{"location":"queue/queue/","title":"\u961f\u5217<code>Queue</code>","text":""},{"location":"queue/queue/#_1","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"queue/queue/#_2","title":"\u7279\u6027","text":"<ul> <li>\u5148\u5165\u5148\u51fa</li> <li>\u7ebf\u6027</li> <li>\u961f\u9996\uff1a\u961f\u5217\u5934\u90e8</li> <li>\u961f\u5c3e\uff1a\u961f\u5217\u5c3e\u90e8</li> <li>\u5165\u961f\uff1a\u52a0\u5165\u961f\u5c3e</li> <li>\u51fa\u961f\uff1a\u5220\u9664\u961f\u9996</li> </ul>"},{"location":"queue/queue/#java","title":"<code>Java</code>\u7528\u6cd5","text":"<pre><code>Queue&lt;Integer&gt; queue = new LinkedList&lt;&gt;();\nqueue.offer(1);//\u5165\u961f\nint peek = queue.peek();//\u8bbf\u95ee\u961f\u9996\u5143\u7d20\nint pop = queue.pop();//\u51fa\u961f\nint size = queue.size();//\u83b7\u53d6\u961f\u5217\u7684\u957f\u5ea6\nboolean isEmpty = queue.isEmpty();//\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n</code></pre>"},{"location":"queue/queue/#_3","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u94fe\u8868</p> <p>\u4f7f\u7528\u4e24\u4e2a\u5355\u94fe\u8868\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u961f\u9996\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u961f\u5c3e</p> <pre><code>public class LinkedListQueue{\nprivate ListNode front, rear;\nprivate int N;\n\npublic LinkedListQueue(){\nfront = null;\nrear = null;\n}\n\npublic int size(){return N;}\n\npublic boolean isEmpty(){return size() == 0;}\n\npublic void push(int num){\nListNode node = new ListNode(num);\nif(front == null){\nfront = node;\nrear = node;\n} else {\nrear.next = node;\nrear = node;\n}\nN++;\n}\n\npublic int pop(){\nint peek = peek();\nfront = front.next;\nN--;\nreturn peek;\n}\n\npublic int peek(){\nif(size() ==0) throw new EmptyQueueException();\nreturn front.val;\n}\n\n}\n</code></pre> <p>\u6570\u7ec4</p> <p>\u73af\u5f62\u6570\u7ec4</p> <pre><code>public class ArrayQueue{\nprivate int[] nums;\nprivate int front;\nprivate int N;\npublic ArrayQueue(int capacity){\nnums = new int[capacity];\nfront = 0;\nN = 0;\n}\n\npublic int capacity(){\nreturn nums.length;\n}\n\npublic int size(){\nreturn N;\n}\n\npublic boolean isEmpty(){\nreturn size() == 0;\n}\n\npublic void push(int num){\nif(N == capacity()){\nthrow new QueueCapacityException();\n}\n\nint rear = (front + N) % capacity();\n\nnums[rear] = num;\n\nN++;\n}\n\npublic int peek(){\nif(size() ==0) throw new EmptyQueueException();\nreturn nums[front];\n}\n\npublic int pop(){\nint peek = peek();\nfront = (front+1) % capacity();\nN--;\nreturn peek;\n}\n}\n</code></pre>"},{"location":"queue/queue/#_4","title":"\u5b9e\u9645\u5e94\u7528","text":"<p>\u6dd8\u5b9d\u8ba2\u5355</p> <p>\u8d2d\u7269\u8005\u4e0b\u5355\u540e\uff0c\u8ba2\u5355\u5c31\u88ab\u52a0\u5165\u5230\u961f\u5217\u4e4b\u4e2d\uff0c\u968f\u540e\u7cfb\u7edf\u518d\u6839\u636e\u987a\u5e8f\u4f9d\u6b21\u5904\u7406\u961f\u5217\u4e2d\u7684\u8ba2\u5355</p> <p>\u6253\u5370\u673a\u7684\u4efb\u52a1\u961f\u5217</p> <p>\u9910\u5385\u7684\u51fa\u9910\u961f\u5217</p>"},{"location":"queue/queue/#leetcode","title":"<code>leetcode</code>","text":"<p>225. \u7528\u961f\u5217\u5b9e\u73b0\u6808</p> <p>\u8bf7\u4f60\u4ec5\u4f7f\u7528\u4e24\u4e2a\u961f\u5217\u5b9e\u73b0\u4e00\u4e2a\u540e\u5165\u5148\u51fa\uff08LIFO\uff09\u7684\u6808\uff0c\u5e76\u652f\u6301\u666e\u901a\u6808\u7684\u5168\u90e8\u56db\u79cd\u64cd\u4f5c\uff08push\u3001top\u3001pop \u548c empty\uff09\u3002</p> <p>\u5b9e\u73b0 MyStack \u7c7b\uff1a</p> <ul> <li>void push(int x) \u5c06\u5143\u7d20 x \u538b\u5165\u6808\u9876\u3002</li> <li>int pop() \u79fb\u9664\u5e76\u8fd4\u56de\u6808\u9876\u5143\u7d20\u3002</li> <li>int top() \u8fd4\u56de\u6808\u9876\u5143\u7d20\u3002</li> <li>boolean empty() \u5982\u679c\u6808\u662f\u7a7a\u7684\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002</li> </ul> <pre><code>class MyStack {\n\nprivate Queue&lt;Integer&gt; A;\nprivate Queue&lt;Integer&gt; B;\n\npublic MyStack() {\nA = new LinkedList&lt;&gt;();\nB = new LinkedList&lt;&gt;();\n}\n\npublic void push(int x) {\nB.offer(x);\nwhile(!A.isEmpty())B.offer(A.poll());\nQueue&lt;Integer&gt; temp = A;\nA = B;\nB = temp;\n}\n\npublic int pop() {\nreturn A.poll();\n}\n\npublic int top() {\nreturn A.peek();\n}\n\npublic boolean empty() {\nreturn A.size() == 0;\n}\n}\n</code></pre> <p>232. \u7528\u6808\u5b9e\u73b0\u961f\u5217</p> <p>\u8bf7\u4f60\u4ec5\u4f7f\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u5148\u5165\u5148\u51fa\u961f\u5217\u3002\u961f\u5217\u5e94\u5f53\u652f\u6301\u4e00\u822c\u961f\u5217\u652f\u6301\u7684\u6240\u6709\u64cd\u4f5c\uff08push\u3001pop\u3001peek\u3001empty\uff09\uff1a</p> <p>\u5b9e\u73b0 MyQueue \u7c7b\uff1a</p> <ul> <li>void push(int x) \u5c06\u5143\u7d20 x \u63a8\u5230\u961f\u5217\u7684\u672b\u5c3e</li> <li>int pop() \u4ece\u961f\u5217\u7684\u5f00\u5934\u79fb\u9664\u5e76\u8fd4\u56de\u5143\u7d20</li> <li>int peek() \u8fd4\u56de\u961f\u5217\u5f00\u5934\u7684\u5143\u7d20</li> <li>boolean empty() \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false</li> </ul> <pre><code>class MyQueue {\n\nStack&lt;Integer&gt; A;\n\nStack&lt;Integer&gt; B;\n\npublic MyQueue() {\nA = new Stack&lt;&gt;();\nB = new Stack&lt;&gt;();\n}\n\npublic void push(int x) {\nB.push(x);\n\n}\n\npublic int pop() {\n\nif(A.isEmpty()){\nwhile(!B.isEmpty())A.push(B.pop());\n}\n\nreturn A.pop();\n}\n\npublic int peek() {\nif(A.isEmpty()){\nwhile(!B.isEmpty())A.push(B.pop());\n}\n\nreturn A.peek();\n}\n\npublic boolean empty() {\nreturn A.isEmpty()&amp;&amp;B.isEmpty();\n}\n}\n</code></pre> <p>\u5251\u6307 Offer 50. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26</p> <p>\u5728\u5b57\u7b26\u4e32 s \u4e2d\u627e\u51fa\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u7a7a\u683c\u3002 s \u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p> <pre><code>class Solution {\npublic char firstUniqChar(String s) {\n\nMap&lt;Character, Integer&gt; dict = new HashMap&lt;&gt;();\n\nQueue&lt;Character&gt; queue = new LinkedList&lt;&gt;();\n\nfor(int i=0;i&lt;s.length();i++){\nchar c = s.charAt(i);\nif(!dict.containsKey(c)){\ndict.put(c, i);\nqueue.offer(c);\n} else {\ndict.put(c,-1);\nwhile(!queue.isEmpty()&amp;&amp;dict.get(queue.peek())==-1)queue.poll();\n\n}\n\n}\n\nreturn queue.isEmpty() ? ' ' : queue.poll();\n}\n}\n</code></pre>"},{"location":"stack/stack/","title":"\u6808 <code>Stack</code>","text":""},{"location":"stack/stack/#_1","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"stack/stack/#_2","title":"\u7279\u6027","text":"<ul> <li>\u5148\u5165\u540e\u51fa</li> <li>\u7ebf\u6027</li> <li>\u7c7b\u6bd4\u4e0e\u684c\u5b50\u4e0a\u7684\u90ae\u4ef6\uff0c\u65b0\u90ae\u4ef6\u653e\u5728\u6700\u4e0a\u9762</li> <li>\u4e00\u645e\u5143\u7d20\u7684\u9876\u90e8\u4fd7\u79f0\u6808\u9876</li> <li>\u5165\u6808\uff1a\u5143\u7d20\u6dfb\u52a0\u5230\u6808\u9876</li> <li>\u51fa\u6808\uff1a\u5220\u9664\u6808\u9876\u5143\u7d20</li> </ul>"},{"location":"stack/stack/#java","title":"<code>Java</code>\u7528\u6cd5","text":"<pre><code>Stack&lt;Integer&gt; stack = new Stack&lt;&gt;();\nstack.push(1);//\u5165\u6808\nint pop = stack.pop();//\u51fa\u6808\nint peek = stack.peek();//\u8bbf\u95ee\u6808\u9876\u5143\u7d20\uff0c\u4e0d\u5220\u9664\u6808\u9876\u5143\u7d20\n</code></pre>"},{"location":"stack/stack/#_3","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>1. \u94fe\u8868</p> <p>\u4f7f\u7528\u5355\u94fe\u8868\uff0c\u94fe\u8868\u9876\u7aef\u63d2\u5165\u5b9e\u73b0push\uff0c \u5220\u9664\u9876\u7aef\u5b9e\u73b0pop\uff0c\u8bbf\u95ee\u9876\u7aef\u5b9e\u73b0peek\u3002</p> <pre><code>public class Stack&lt;Item&gt; {\n\nprivate Node first;\n\nprivate int N;\n\nprivate class Node {\nItem item;\nNode next;\n}\n\npublic boolean isEmpty(){return first == null;}\n\npublic int size(){return N;}\n\npublic void push(Item item){\nNode oldFirst = first;\nfirst = new Node();\nfirst.item = item;\nfirst.next = oldFirst;\nN++;\n}\n\npublic Item pop(){\nItem item = first.item;\nfirst = first.next;\nN--;\n}\n}\n</code></pre> <p>2. \u6570\u7ec4</p> <p>\u4f7f\u7528\u6570\u7ec4\uff0c\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\u5b9e\u73b0push\uff0c\u5c3e\u90e8\u5220\u9664\u5143\u7d20\u5b9e\u73b0pop</p> <pre><code>public class Stack&lt;Item&gt; {\n\nprivate ArrayList&lt;Item&gt; list;\n\npublic boolean isEmpty(){return list.size()==0;}\n\npublic int size(){return list.size();}\n\npublic void push(Item item){\nlist.add(item);\n}\n\npublic Item pop(){\nreturn list.remove(list.size()-1);\n}\n}\n</code></pre>"},{"location":"stack/stack/#_4","title":"\u5b9e\u9645\u5e94\u7528","text":"<p>\u5e73\u8861\u7b26\u53f7</p> <p>\u7f16\u8bd1\u5668\u68c0\u67e5\u82b1\u62ec\u53f7\u3001\u65b9\u62ec\u53f7\u3001\u5706\u62ec\u53f7\u7b49\u662f\u5426\u6210\u5bf9\u51fa\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u6808\u6765\u5b9e\u73b0\u3002\u505a\u4e00\u4e2a\u7a7a\u6808\u3002\u8bfb\u5165\u5b57\u7b26\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\u3002a.\u9047\u5230\u8d77\u59cb\u62ec\u53f7\uff0c\u5219\u63a8\u5165\u6808\uff1bb.\u9047\u5230\u7ed3\u5c3e\u62ec\u53f7\uff0c\u5982\u679c\u6808\u4e3a\u7a7a\u5219\u62a5\u9519\u3002\u5426\u5219\uff0c\u5c06\u6808\u9876\u5143\u7d20\u5f39\u51fa\uff0c\u5982\u679c\u5f39\u51fa\u7684\u5143\u7d20\u4e0d\u662f\u5bf9\u5e94\u7684\u8d77\u59cb\u62ec\u53f7\uff0c\u5219\u62a5\u9519\u3002\u5982\u679c\u8bfb\u5230\u6587\u4ef6\u672b\u5c3e\u65f6\uff0c\u6808\u4e0d\u4e3a\u7a7a\uff0c\u4e5f\u62a5\u9519\u3002</p> <p>\u65b9\u6cd5\u8c03\u7528</p> <p>\u6bcf\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7cfb\u7edf\u5c31\u4f1a\u5728\u6808\u9876\u6dfb\u52a0\u4e00\u4e2a\u6808\u5e27\uff0c\u7528\u6765\u8bb0\u5f55\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u5728\u9012\u5f52\u51fd\u6570\u4e2d\uff0c\u5411\u4e0b\u9012\u63a8\u4f1a\u4e0d\u65ad\u6267\u884c\u5165\u6808\uff0c\u5411\u4e0a\u56de\u6eaf\u9636\u6bb5\u65f6\u51fa\u6808\u3002</p> <p>\u6d4f\u89c8\u5668\u524d\u8fdb\u540e\u9000, \u8f6f\u4ef6\u4e2d\u7684\u64a4\u9500\u4e0e\u53cd\u64a4\u9500</p> <p>\u6bcf\u5f53\u6211\u4eec\u6253\u5f00\u65b0\u7684\u7f51\u9875\uff0c\u6d4f\u89c8\u5668\u5c31\u5c06\u4e0a\u4e00\u4e2a\u7f51\u9875\u6267\u884c\u5165\u6808\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u300c\u540e\u9000\u300d\u64cd\u4f5c\u6765\u56de\u5230\u4e0a\u4e00\u9875\u9762\uff0c\u540e\u9000\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u5728\u6267\u884c\u51fa\u6808\u3002\u5982\u679c\u8981\u540c\u65f6\u652f\u6301\u540e\u9000\u548c\u524d\u8fdb\uff0c\u90a3\u4e48\u5219\u9700\u8981\u4e24\u4e2a\u6808\u6765\u914d\u5408\u5b9e\u73b0\u3002</p>"},{"location":"stack/stack/#leetcode","title":"<code>leetcode</code>","text":""},{"location":"stack/stack/#_5","title":"\u6709\u6548\u7684\u62ec\u53f7","text":"<p>20. \u6709\u6548\u7684\u62ec\u53f7</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u62ec '('\uff0c')'\uff0c'{'\uff0c'}'\uff0c'['\uff0c']'\u00a0\u7684\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548\u3002</p> <p>\u6709\u6548\u5b57\u7b26\u4e32\u9700\u6ee1\u8db3\uff1a</p> <ol> <li> <p>\u5de6\u62ec\u53f7\u5fc5\u987b\u7528\u76f8\u540c\u7c7b\u578b\u7684\u53f3\u62ec\u53f7\u95ed\u5408\u3002</p> </li> <li> <p>\u5de6\u62ec\u53f7\u5fc5\u987b\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u95ed\u5408\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u53f3\u62ec\u53f7\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u76f8\u540c\u7c7b\u578b\u7684\u5de6\u62ec\u53f7\u3002 <pre><code>class Solution {\npublic boolean isValid(String s) {\nStack&lt;Character&gt; stack = new Stack&lt;&gt;();\nMap&lt;Character, Character&gt; dict = new HashMap&lt;&gt;();\n\ndict.put(')','(');\ndict.put(']','[');\ndict.put('}','{');\n\nfor(char c: s.toCharArray()){\n\nif(c == '(' || c == '[' || c == '{'){\nstack.push(c);\n}else {\nif(stack.isEmpty())return false;\n\nif(stack.pop() != dict.get(c))return false;\n}\n}\nreturn stack.isEmpty();\n}\n}\n</code></pre> <code>ASCII\u7801\u8868</code>\u4e2d\u8d77\u59cb\u62ec\u53f7\u4e0e\u7ed3\u5c3e\u62ec\u53f7\u76f8\u5dee1\u6216\u80052\uff0c\u6240\u4ee5\u4ee5\u4e0a\u4ee3\u7801\u8fd8\u53ef\u4ee5\u4f18\u5316 <pre><code>class Solution {\npublic boolean isValid(String s) {\nStack&lt;Character&gt; stack = new Stack&lt;&gt;();\n\nfor(char c: s.toCharArray()){\n\nif(c == '(' || c == '[' || c == '{'){\nstack.push(c);\n}else {\nif(stack.isEmpty())return false;\nint pop = stack.pop();\nif(pop != c-1 &amp;&amp; pop != c-2)return false;\n}\n}\nreturn stack.isEmpty();\n}\n}\n</code></pre></p> </li> </ol>"},{"location":"stack/stack/#_6","title":"\u56de\u6587\u94fe\u8868","text":"<p>234. \u56de\u6587\u94fe\u8868</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9 head \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u94fe\u8868\u662f\u5426\u4e3a\u56de\u6587\u94fe\u8868\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 <pre><code>/**\n* Definition for singly-linked list.\n* public class ListNode {\n    *     int val;\n    *     ListNode next;\n    *     ListNode() {}\n    *     ListNode(int val) { this.val = val; }\n    *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n    * }\n    */\nclass Solution {\npublic boolean isPalindrome(ListNode head) {\nStack&lt;Integer&gt; stack = new Stack&lt;&gt;();\nListNode temp = head;\nwhile(temp!=null){\nstack.push(temp.val);\ntemp = temp.next;\n}\n\nwhile(!stack.isEmpty()){\n\nif(head.val!=stack.pop())return false;\nhead = head.next;\n}\n\nreturn true;\n}\n}\n</code></pre> \u8fd9\u91cc\u76f8\u5f53\u4e8e\u94fe\u8868\u4ece\u524d\u5f80\u540e\u5168\u90e8\u90fd\u6bd4\u8f83\u4e86\u4e00\u904d\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u62ff\u94fe\u8868\u7684\u540e\u534a\u90e8\u5206\u548c\u524d\u534a\u90e8\u5206\u6bd4\u8f83\u5373\u53ef\uff0c\u6ca1\u5fc5\u8981\u5168\u90e8\u6bd4\u8f83\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b <pre><code>/**\n* Definition for singly-linked list.\n* public class ListNode {\n    *     int val;\n    *     ListNode next;\n    *     ListNode() {}\n    *     ListNode(int val) { this.val = val; }\n    *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n    * }\n    */\nclass Solution {\npublic boolean isPalindrome(ListNode head) {\nStack&lt;Integer&gt; stack = new Stack&lt;&gt;();\nListNode temp = head;\nint length = 0;\nwhile(temp!=null){\nstack.push(temp.val);\ntemp = temp.next;\nlength++;\n}\nlength/=2;\nwhile(length-- &gt; 0){\n\nif(head.val!=stack.pop())return false;\nhead = head.next;\n}\n\nreturn true;\n}\n}\n</code></pre></p>"},{"location":"stack/stack/#_7","title":"\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386","text":"<p>94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \uff0c\u8fd4\u56de \u5b83\u7684 \u4e2d\u5e8f \u904d\u5386 \u3002 <pre><code>/**\n* Definition for a binary tree node.\n* public class TreeNode {\n    *     int val;\n    *     TreeNode left;\n    *     TreeNode right;\n    *     TreeNode() {}\n    *     TreeNode(int val) { this.val = val; }\n    *     TreeNode(int val, TreeNode left, TreeNode right) {\n    *         this.val = val;\n    *         this.left = left;\n    *         this.right = right;\n    *     }\n    * }\n    */\nclass Solution {\npublic List&lt;Integer&gt; inorderTraversal(TreeNode root) {\nList&lt;Integer&gt; res = new ArrayList&lt;&gt;();\nStack&lt;TreeNode&gt; stack = new Stack&lt;&gt;();\nwhile(root!=null || !stack.isEmpty()){\nwhile(root!=null){\nstack.push(root);\nroot = root.left;\n}\nroot = stack.pop();\nres.add(root.val);\nroot = root.right;\n\n}\n\nreturn res;\n}\n}\n</code></pre></p>"},{"location":"stack/stack_test1/","title":"\u6808","text":"<p>2023-03-21</p> <p>61</p>"},{"location":"stack/stack_test1/#_2","title":"\u7b2c\u4e00\u6b21\u6d4b\u8bd5","text":"<p>\u7279\u6027 18 6</p> <ul> <li>\u5148\u5165\u540e\u51fa</li> <li>\u7ebf\u6027</li> </ul>"},{"location":"stack/stack_test1/#java-12-0","title":"java\u7528\u6cd5 12 0","text":"<p>\u5b9e\u73b0\u65b9\u5f0f 40</p> <p>\u94fe\u8868 20 10</p> <pre><code>public class Stack&lt;Item&gt;{\npublic Node&lt;Item&gt; first;\npublic int N;\n\npublic class Node{\npublic Item item;\npublic Node next;\n}\n\npublic boolean isEmpty(){return first == null;}\n\npublic int size(){return N;}\n\npublic void push(Item item){\nNode oldFirst = first;\n//first = new Node();\nfirst.item = item;\nfirst.next = oldFirst;\nN++;\n}\n\npublic Item pop(){\n\nItem item = first.item;\n\nfirst = first.next;\n\nN--;\n\nreturn item;\n}\n\n}\n</code></pre> <p>\u6570\u7ec4 20 20</p> <pre><code>public class Stack&lt;Item&gt;{\n\nprivate ArrayList&lt;Item&gt; list;\n\npublic boolean isEmpty(){return list.size() == 0;}\n\npublic int size(){return list.size();}\n\npublic void push(Item item){\nlist.add(item);\n}\n\npublic Item pop(){\nreturn list.remove(list.size()-1);\n}\n}\n</code></pre> <p>\u5e94\u7528 30 25</p> <ol> <li>\u5e73\u8861\u7b26\u53f7 \u7f16\u8bd1\u5668\u7f16\u8bd1\u62ec\u53f7\u7684\u5408\u6cd5\u6027\uff0c\u662f\u5426\u95ed\u73af\uff0c\u5229\u7528\u4e00\u4e2a\u6808\u6765\u5b9e\u73b0\u3002 \u8bfb\u53d6\u6587\u4ef6\u76f4\u5230\u5c3e\u90e8\uff0c\u5982\u679c\u662f\u8d77\u59cb\u62ec\u53f7\uff0c\u5219\u63a8\u5165\u6808\u4e2d\u3002\u5982\u679c\u662f\u7ed3\u5c3e\u62ec\u53f7\uff0c\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\u3002\u5982\u679c\u6808\u4e3a\u7a7a\uff0c\u5219\u62a5\u9519\uff1b\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u63a8\u51fa\u6808\u9876\u5143\u7d20\u3002\u5982\u679c\u63a8\u51fa\u7684\u5143\u7d20\u4e0e\u5f53\u524d\u62ec\u53f7\u4e0d\u5339\u914d\uff0c\u5219\u62a5\u9519\u3002 \u5982\u679c\u626b\u63cf\u5230\u5c3e\u90e8\u540e\uff0c\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5219\u62a5\u9519\u3002</li> <li>\u6d4f\u89c8\u5668\u7684\u540e\u9000\u4e0e\u524d\u8fdb\uff0c\u8f6f\u4ef6\u7684\u64a4\u9500\u4e0e\u53cd\u64a4\u9500\u3002</li> <li>\u65b9\u6cd5\u8c03\u7528\uff0c\u6bcf\u5f53\u6709\u65b0\u65b9\u6cd5\u8c03\u7528\uff0c\u5219\u5c06\u51fd\u6570\u53d8\u91cf\u3001\u5730\u5740\u7b49\u63a8\u5165\u6808\u9876\uff0c\u8be5\u5f15\u7528\u4e3a\u6808\u5e27\uff0c\u65b9\u6cd5\u6267\u884c\u5b8c\u540e\uff0c\u6267\u884c\u51fa\u6808\uff0c\u5373\u6808\u5e27\u51fa\u6808\u6216\u6808\u9876\u5143\u7d20\u51fa\u6808\u3002\u51fd\u6570\u9012\u5f52</li> </ol>"}]}